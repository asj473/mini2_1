<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.mapper.QnaMapper">

	<resultMap id="qnaMap" type="QnaVO">
	    <result column="no" property="no" />
	    <result column="title" property="title" />
	    <result column="writer" property="writer" />
	    <result column="content" property="content" />
	    <result column="reg_date" property="regDate" />
	</resultMap>
	
	<!-- 리스트 -->
	<select id="selectBoard" parameterType="PageVO" resultMap="qnaMap">
<!-- 	    select *  -->
<!-- 		  from qna_board   -->
<!-- 		 order by no desc -->
		 
		 SELECT * FROM qna_board 
		 order by no desc
		 LIMIT #{begin}, #{end}
		
	</select>
<!-- 	페이징 위한 카운트 -->
	<select id="selectCount" parameterType="PageVO" resultType="int">
    	select count(*)
          from qna_board 
    </select> 

	<!-- 디테일 -->
	<select id="selectBoardByNo" parameterType="int" resultMap="qnaMap">
	    select *         
		  from qna_board  
		 where no = #{no}
	</select>
	
	<!-- 삭제 -->
	<delete id="delete" parameterType="int" >
		delete from qna_board 
		where no = #{no}
	</delete>
	
	<!-- 글쓰기 -->
	<insert id="write" parameterType="QnaVO">
		insert into qna_board(title, writer, content, reg_date)
		values(#{title},#{writer},#{content},now())
	
	</insert>
	
	<!-- 수정하기 -->
	<update id="update" parameterType="QnaVO">
		update qna_board
		set title = #{title},
		 writer = #{writer},
		 content = #{content}
		 where no = #{no}
	
	</update>
	
	

<!-- 댓글 처리 DAO 시작 -->
	<!-- ################################# -->	
	
    <resultMap id="boardCommentMap" type="QnaCommentVO" >
		<result property="commentNo" column="comment_no"/>
		<result property="no" column="no"/>
		<result property="userId" column="user_id"/>
		<result property="content" column="content"/>
		<result property="regDate" column="reg_date"/>
	</resultMap>
	
	<insert id="insertBoardComment" parameterType="QnaCommentVO">
		insert into qna_comment(
			 no, user_id, content , reg_date
		) values (
			#{no}, #{userId}, #{content}, now()
		)
	</insert>
	
	<select id="selectBoardCommentByNo" parameterType="int" resultMap="boardCommentMap">
	    select comment_no,
	           no,
	           user_id,
	           content,
	           reg_date
	      from qna_comment
	     where no = #{no} 
	  order by comment_no  desc  
	</select>
	
	<delete id="deleteBoardComment" parameterType="int">
	    delete 
	      from qna_comment
	     where comment_no = #{commentNo}
	</delete>
	
	<update id="updateBoardComment" parameterType="QnaCommentVO">
	    update qna_comment
	       set content = #{content}
	     where comment_no = #{commentNo}
	</update>











	
</mapper>

